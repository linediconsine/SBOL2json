var getRangeLength = require("./getRangeLength");

module.exports = function getRangeAngles(range, rangeMax) {
  var _getStartEndAndTotalA = getStartEndAndTotalAngle(range, rangeMax),
      startAngle = _getStartEndAndTotalA.startAngle,
      totalAngle = _getStartEndAndTotalA.totalAngle,
      endAngle = _getStartEndAndTotalA.endAngle;

  return {
    startAngle: startAngle,
    totalAngle: totalAngle,
    endAngle: endAngle,
    centerAngle: startAngle + totalAngle / 2,
    locationAngles: range.locations && range.locations.map(function (location) {
      return getRangeAngles(location, rangeMax);
    })
  };
};

function getStartEndAndTotalAngle(range, rangeMax) {
  var rangeLength = getRangeLength({ start: range.start, end: range.end }, rangeMax);

  return {
    startAngle: 2 * Math.PI * (range.start / rangeMax),
    totalAngle: rangeLength / rangeMax * Math.PI * 2,
    endAngle: 2 * Math.PI * (range.end + 1) / rangeMax //use a +1 here because the angle must encompass the end of the annotation
  };
}